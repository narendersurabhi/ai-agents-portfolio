name: deploy
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO: ${{ secrets.ECR_REPO }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_URI: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPO }}
        run: |
          docker build -t $ECR_URI:$IMAGE_TAG -f docker/Dockerfile .
          docker push $ECR_URI:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Create or update App Runner
        id: apprunner
        run: |
          SVC_ARN="${{ secrets.APP_RUNNER_SERVICE_ARN }}"
          if [ -z "$SVC_ARN" ]; then
            ARN=$(aws apprunner create-service \
              --service-name ai-agents-portfolio \
              --source-configuration '{
                "ImageRepository": {
                  "ImageIdentifier": "'"$IMAGE_URI"'",
                  "ImageRepositoryType": "ECR",
                  "ImageConfiguration": {"Port":"8080"}
                },
                "AutoDeploymentsEnabled": true
              }' --query service.ServiceArn --output text)
            echo "SERVICE_ARN=$ARN" >> $GITHUB_ENV
            echo "APP_RUNNER_SERVICE_ARN=$ARN"
          else
            aws apprunner update-service \
              --service-arn "$SVC_ARN" \
              --source-configuration "{
                \"ImageRepository\": {
                  \"ImageIdentifier\": \"${IMAGE_URI}\",
                  \"ImageRepositoryType\": \"ECR\",
                  \"ImageConfiguration\": {\"Port\":\"8080\"}
                }
              }"
            echo "SERVICE_ARN=$SVC_ARN" >> $GITHUB_ENV
          fi

      - name: Print URL
        run: |
          URL=$(aws apprunner describe-service --service-arn "$SERVICE_ARN" --query 'Service.ServiceUrl' --output text)
          echo "App URL: $URL"
