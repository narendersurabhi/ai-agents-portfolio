version: 0.2
env:
  variables:
    IMAGE_REPO: ai-agents-portfolio

phases:
  pre_build:
    commands:
      - set -eu
      - aws sts get-caller-identity
      - echo "REGION=${AWS_DEFAULT_REGION:-${AWS_REGION:-us-east-2}}"
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION="${AWS_DEFAULT_REGION:-${AWS_REGION:-us-east-2}}"
      - ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO"
      - echo "ECR_URI=$ECR_URI"
      - |
        if ! aws --region "$REGION" ecr describe-repositories --repository-names "$IMAGE_REPO" >/dev/null 2>&1; then
          aws --region "$REGION" ecr create-repository --repository-name "$IMAGE_REPO" --image-scanning-configuration scanOnPush=true
        fi
      - aws ecr get-login-password --region "$REGION" | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com"

  build:
    commands:
      - set -eu
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION="${AWS_DEFAULT_REGION:-${AWS_REGION:-us-east-2}}"
      - ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO"
      - docker build -t "$ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION" -f docker/Dockerfile .
      - docker tag "$ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION" "$ECR_URI:latest"

  post_build:
    commands:
      - set -eu
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION="${AWS_DEFAULT_REGION:-${AWS_REGION:-us-east-2}}"
      - ECR_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO"
      - docker push "$ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - docker push "$ECR_URI:latest"
      - |
        DIGEST=$(aws --region "$REGION" ecr describe-images \
          --repository-name "$IMAGE_REPO" \
          --image-ids imageTag="$CODEBUILD_RESOLVED_SOURCE_VERSION" \
          --query 'imageDetails[0].imageDigest' --output text)
        printf '{"imageUri":"%s","imageDigest":"%s"}' "$ECR_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION" "$DIGEST" > image.json

artifacts:
  files:
    - image.json
